@import url("/node_modules/bootstrap-icons/font/bootstrap-icons.css");
@import "custom";

/* Header */

/* Ajoutez ces styles dans votre fichier CSS ou dans une balise <style> */
.navbar-collapse {
    justify-content: center;
    margin: auto;
    top: 100px; /* Ajustez cette valeur si la hauteur de votre barre de navigation change */
    left: 0;
    width: 100%; /* Pour que le menu prenne toute la largeur */
    background-color:$primary; /* Couleur de fond de votre navbar (celle que vous avez déjà) */
    z-index: 1030; /* Assurez-vous qu'il est au-dessus des autres éléments (1030 est la valeur par défaut de Bootstrap pour les navbars) */
    /*  Optionnel : Pour une animation plus douce */
    transition: transform 0.1s ease-in-out; /* Ajout d'une transition */
}

.navbar-collapse.show {
    transform: translateY(0); /* Affiche le menu quand le bouton est cliqué */
}

/* Styles pour les liens dans le menu déroulant (optionnel) */
.navbar-nav .nav-link {
    text-align: center;
    color: white !important; /* Couleur du texte en blanc (important pour la lisibilité sur fond bleu) */
}

/* Style pour le bouton burger (optionnel) */
.navbar-toggler {
    z-index: 1031; /* Pour être sûr que le bouton burger est cliquable même quand le menu est ouvert */
}

/* Media query pour les écrans plus petits (si nécessaire) */
@media (max-width: 991.98px) { /* Ajustez la valeur selon votre breakpoint Bootstrap */
    .navbar-collapse {
        top: 100px; /* Ajustez si nécessaire */
        /* d'autres styles spécifiques aux petits écrans */
    }
}

/* FIN du Header */

body {
    display: flex;
    flex-direction: column; /* On empile les éléments verticalement */
    min-height: 100vh; /* Le body occupe toute la hauteur de l'écran */
  }

html{
    position: relative;
    min-height: 100%;
}

main{
    flex: 1; /* Il grandit pour remplir l'espace disponible */
    margin-bottom: 250px;
}

footer.footer{
    padding: 15px;
    position: absolute;
    bottom: 0;
    width: 100%;
}

p{
    font-family: $font-family-serif;
    font-size: 18px;
}

.hero-scene{
    position: relative;
    &::before{
        content:"";
        position: absolute;
        top:0;
        left:0;
        width:100%;
        height:100%;
        background-image: url(../images/tasse\ dealm.JPG);
        background-size: cover;
        filter: brightness(0.3);
    }

    *{
        //Positionner les éléments devant le ::before
        position:relative;
    }

    .hero-scene-content{
        height: 300px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
}

  .img-height {
    height: 200px; /* Adjust this value to your desired height */
    object-fit: cover; /* or contain, depending on how you want the image to fit */
}

.container-padding {
    padding-top: 20px;
    padding-bottom: 20px;
}

.img-opacity {
    opacity: 1; /* Adjust this value for the desired opacity */
    transition: opacity 0.3s ease; /* Add a transition for a smooth effect */
}

.image-container {
    position: relative; /* Needed for absolute positioning of the overlay */
    overflow: hidden; /* Hide the overlay when it extends outside the container */
}

.image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black background */
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0; /* Initially hidden */
    transition: opacity 0.3s ease;
}

.image-title {
    color: white;
}

.image-container:hover .img-opacity {
    opacity: 0.3; /* Image becomes fully opaque on hover */
}

.image-container:hover .image-overlay {
    opacity: 1;
}

.form-label{
    color: $primary;
}